\frametitle{Example: Simulating a Markov Chain - R and Python}
Generate a path of this Markov Chain with length $n=40$.

\vspace{2mm}

\begin{columns}[t]
\column{0.48\textwidth}
\textbf{R Code}
\begin{lstlisting}[language=R]
n <- 40
P <- matrix(c(0.5,0.6,0.5,0.4),2,2)
X <- vector()
U <- runif(1)
U1 <- runif(n)
if (U < 0.3) {X[1] <- 1}
else {X[1] <- 2}

for (i in c(1:n)) {
  if (U1[i] < P[X[i],1]) {
    X[i+1] <- 1
  } else {
    X[i+1] <- 2
  }
}
A <- c(0:n)
plot(A, X, type="s")
\end{lstlisting}

\column{0.50\textwidth}
\textbf{Python Code}
\begin{lstlisting}[language=Python]
import numpy as np
import matplotlib.pyplot as plt

n = 40
P = np.array([[0.5, 0.5],
              [0.6, 0.4]])
X = np.zeros(n+1, dtype=int)
U = np.random.rand()
if U < 0.3: X[0] = 1
else: X[0] = 2

U1 = np.random.rand(n)

for i in range(n):
    if U1[i] < P[X[i]-1, 0]:
        X[i+1] = 1
    else:
        X[i+1] = 2

plt.step(range(n+1), X)
plt.show()
\end{lstlisting}
\end{columns}
